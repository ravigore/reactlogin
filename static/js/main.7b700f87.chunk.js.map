{"version":3,"sources":["helpers/Validation.js","helpers/History.js","components/Login.js","components/Profile.js","components/HomePage.js","components/MainRouting.js","App.js","serviceWorker.js","index.js"],"names":["formValid","data","valid","keyLength","Object","keys","inputData","length","i","entries","key","value","checkResult","LoginValidate","validCheck","Regex","RegExp","name","username","test","password","history","createBrowserHistory","Login","state","valueChanged","e","target","setState","handleSubmit","preventDefault","result","alert","localStorage","setItem","push","this","className","onSubmit","noValidate","type","placeholder","onChange","Component","Profile","closeModal","props","updateHomeState","modalStatus","homeInfo","display","style","tabIndex","role","onClick","aria-hidden","href","src","alt","HomePage","displayMenu","toggle","showDropdownMenu","hideDropdownMenu","logoutMe","updateStateInfo","useremail","getItem","id","onMouseLeave","MainRouting","component","rest","render","to","pathname","from","location","App","listen","action","basename","process","exact","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b700f87.chunk.js","sourcesContent":["export const formValid = (data) => {\r\n    let valid = true;\r\n    var keyLength = Object.keys(data.inputData).length\r\n    let i = 0;\r\n    for (const [key, value] of Object.entries(data.inputData)) {\r\n      i++;\r\n      var checkResult = LoginValidate(key,value,data.validCheck)\r\n      if({...checkResult}[key].length > 0){\r\n        valid = false\r\n      }\r\n      if (i === keyLength)\r\n      return [valid,checkResult]\r\n    }\r\n}\r\nconst Regex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nexport const LoginValidate = (name,value,validCheck)=>{\r\nswitch (name) {\r\n    case \"username\":\r\n    validCheck.username = Regex.test(value)\r\n        ? \"\"\r\n        : \"Please enter valid email address\";\r\n      break;\r\n    case \"password\":\r\n    validCheck.password =\r\n        !value ? \"Please enter valid password\" : \"\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return validCheck;\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React, {Component} from 'react'\r\nimport { formValid ,LoginValidate} from '../helpers/Validation';\r\nimport { history } from '../helpers/History';\r\n\r\nexport default class Login extends Component {\r\n   state =  {\r\n    inputData:{\r\n    username: '',\r\n    password: ''\r\n    },\r\n    validCheck:{\r\n      username: '',\r\n      password: ''\r\n    }\r\n}\r\n  valueChanged = (e)=> {\r\n   const {name, value} = e.target;\r\n   let validCheck = LoginValidate(name,value,{ ...this.state.validCheck })\r\n   let inputData = {...this.state.inputData};\r\n   inputData[name] = value\r\n   this.setState({inputData,validCheck});\r\n  }\r\n\r\n  handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n    var result = formValid(this.state)\r\n    let inputData = {...this.state.inputData};\r\n    var validCheck = result[1]\r\n    this.setState({inputData,validCheck});\r\n    if (result[0]) {\r\n      alert(\"Login Success\")\r\n      localStorage.setItem(\"username\",\"Ravindra\");\r\n      history.push(\"/home\");\r\n    } else {\r\n      alert(\"Login Failed\")\r\n    }\r\n  }\r\n  render() {\r\n    const { validCheck } = this.state;\r\n    return (\r\n        <div className=\"bkcolor\">\r\n        <div className='row vertical-center'>\r\n          <div className=\"col-10 col-md-8 col-lg-4 mx-auto\">\r\n            <form onSubmit={this.handleSubmit} className=\"form-wrapper\" noValidate>\r\n              <h2>Login</h2>\r\n              <div className='form-group'>\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  placeholder=\"Enter email address\"\r\n                  onChange={this.valueChanged}\r\n                  noValidate\r\n                  />\r\n              {validCheck.username.length > 0 && (\r\n                <div className=\"error\">{validCheck.username}</div>\r\n              )}\r\n                 </div>\r\n                <div className='form-group'>\r\n                <label >Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.valueChanged}\r\n                  noValidate\r\n                  />\r\n              {validCheck.password.length > 0 && (\r\n                <div className=\"error\">{validCheck.password}</div>\r\n              )}\r\n              </div>\r\n              <button type=\"submit\" className='submit mt-2'>Login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class Profile extends Component {\r\n  closeModal = () => {\r\n    this\r\n      .props\r\n      .updateHomeState({\"toggle\": false})\r\n  }\r\n  render() {\r\n    const display = {\r\n      display: 'block'\r\n    };\r\n    const hide = {\r\n      display: 'none'\r\n    };\r\n    const modalStatus = this.props.homeInfo['toggle']\r\n      ? display\r\n      : hide\r\n    return (\r\n      <div className=\"modal\" style={modalStatus} tabIndex=\"-1\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Profile</h4>\r\n              <button type=\"button\" onClick={this.closeModal} className=\"close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body profile-bk\">\r\n              <div  className=\"col-12 d-flex flex-row-reverse\">\r\n              <button className=\"btn-sm btn-success\" href=\"#\"><i className=\"fa fa-edit\"></i> Edit</button>\r\n              </div>\r\n              <div className=\"col-12 text-center\">\r\n                  <div className=\"profile-userpic\">\r\n                    <img\r\n                      src=\"https://img.icons8.com/bubbles/300/000000/user.png\"\r\n                      className=\"img-responsive\"\r\n                      alt=\"\"/>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <i className=\"fa fa-diamond pr-2\"></i>\r\n                    <b>Ravindra\r\n                    </b>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    Developer\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <button type=\"button\" className=\"btn btn-success btn mr-2\">Follow</button>\r\n                    <button type=\"button\" className=\"btn btn-danger btn ml-2\">Message</button>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h5 className=\"mb-3\">Social Links</h5>\r\n                    <i className=\"fa fa-facebook fa-3x m-2\"></i>\r\n                    <i className=\"fa fa-twitter fa-3x m-2\"></i>\r\n                    <i className=\"fa fa-github fa-3x m-2\"></i>\r\n                    <i className=\"fa fa-instagram fa-3x m-2\"></i>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { history } from '../helpers/History';\r\nimport Profile from './Profile';\r\n\r\nexport default class HomePage extends Component {\r\n    state = {\r\n        displayMenu: false,\r\n        toggle: false\r\n      };\r\n    toggle = ()=>{\r\n        this.setState({\r\n          toggle: !this.state.toggle\r\n        });\r\n      }\r\n    showDropdownMenu = (e)=>{\r\n        e.preventDefault();\r\n        this.setState({ displayMenu: true});\r\n    }\r\n    hideDropdownMenu = (e)=>{\r\n        e.preventDefault();\r\n        this.setState({ displayMenu: false });\r\n    }\r\n    logoutMe =(e)=>{\r\n        localStorage.setItem(\"username\",\"\");\r\n        history.push(\"/\");\r\n    }\r\n    updateStateInfo = ({displayMenu=this.state.displayMenu, toggle=this.state.toggle}) =>{\r\n        this.setState({\r\n            displayMenu,\r\n            toggle\r\n        })\r\n    }\r\n\r\n    render() {\r\n      const useremail = localStorage.getItem(\"username\");\r\n        return (\r\n        <div>\r\n          <nav className=\"navbar navbar-expand-lg nav-custom\">\r\n            <div className=\"navbar-header d-flex col\">\r\n                <a className=\"navbar-brand\" href=\"/#\"><i className=\"fa fa-cube pr-2\"></i>My<b>Site</b></a>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n            <div className=\"input-group\"> <input type=\"text\" className=\"form-control input-text\" placeholder=\"Search \"/>\r\n                <div className=\"input-group-append\"> <button className=\"btn btn-outline-warning btn-sm pl-4 pr-4 search-btn\" type=\"button\"><i className=\"fa fa-search\"></i></button> </div>\r\n            </div>\r\n            </div>\r\n            <div id=\"navbarCollapse\" className=\"collapse navbar-collapse justify-content-start\">\r\n                <ul className=\"nav navbar-nav ml-auto\">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a href=\"/#\" onClick={this.showDropdownMenu} className=\"nav-link dropdown-toggle\"><i className=\"fa fa-user-circle-o fa-lg p-2\"></i>{useremail}</a>\r\n                        { this.state.displayMenu ? (\r\n                        <ul onMouseLeave={this.hideDropdownMenu} className={`dropdown-menu ${this.state.displayMenu ? 'show':''}`}>\r\n                            <li><span  onClick={this.toggle} className=\"dropdown-item\"><i className=\"fa fa-user-o\"></i> Profile</span></li>\r\n                            <li className=\"divider dropdown-divider\"></li>\r\n                            <li><span onClick={this.logoutMe} className=\"dropdown-item\"><i className=\"fa fa-sign-out\"/> Logout</span></li>\r\n                        </ul>\r\n                    ):\r\n                    (\r\n                    null\r\n                    )}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        {/* <a className=\"btn\" onClick={this.toggle}>{this.state.showProfile ? 'Close modal' : 'Open modal'}</a> */}\r\n         <Profile updateHomeState={this.updateStateInfo} homeInfo={this.state}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const MainRouting = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('username')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)\r\nexport default MainRouting;","import React ,{Component} from 'react';\r\nimport './App.css';\r\nimport './index.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Login from './components/Login'\r\nimport HomePage from './components/HomePage'\r\nimport MainRouting from './components/MainRouting'\r\nimport { history } from './helpers/History';\r\nimport { BrowserRouter as Router, Route , Switch} from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        history.listen((location, action) => {\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n          <div className=\"bkcolor\">\r\n                <Router history={history} basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                        <MainRouting exact path=\"/home\" component={HomePage} />\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route component={() => (<div>404 Not found </div>)} />\r\n                </Switch>\r\n                </Router>\r\n                {/* <Login/> */}\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}